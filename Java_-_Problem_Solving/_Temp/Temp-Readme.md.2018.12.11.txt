<p align="center">
    <a href="https://www.hackerrank.com/peti8cm">
        <img height=85 src="https://d3keuzeb2crhkn.cloudfront.net/hackerrank/assets/styleguide/logo_wordmark-f5c5eb61ab0a154c3ed9eda24d0b9e31.svg">
    </a>
    <br>Solutions to HackerRank problems
</p>


# java - Problem Solving

|          Subdomain          |                                                         Challenge                                                        | Points |                                                                                         Solution                                                                                        |
|:---------------------------:|:------------------------------------------------------------------------------------------------------------------------:|:------:|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|
|                               Warmup         | [Solve Me First](https://www.hackerrank.com/challenges/solve-me-first/problem)                                           |    1   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Introduction/Welcome_to_Java/Solution.java)          |
|                        Warmup         | [Simple Array Sum](https://www.hackerrank.com/challenges/simple-array-sum/problem)                                       |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Introduction/Java_Stdin_and_Stdout_I/Solution.java)                |
|          Warmup         | [Compare the Triplets](https://www.hackerrank.com/challenges/compare-the-triplets/problem)                               |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Introduction/Java_if_else/Solution.java)                          |
|           Warmup         | [A Very Big Sum](https://www.hackerrank.com/challenges/a-very-big-sum/problem)                                           |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Introduction/Java_Stdin_and_Stdout_II/Solution.java)              |
|           Warmup         | [Diagonal Difference](https://www.hackerrank.com/challenges/diagonal-difference/problem)                                 |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Introduction/Java_Output_Formatting/Solution.java)              |
|             Warmup         | [Plus Minus](https://www.hackerrank.com/challenges/plus-minus/problem)                                                   |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Introduction/Java_loops_I/Solution.java)                       |
|              Warmup         | [Staircase](https://www.hackerrank.com/challenges/staircase/problem)                                                     |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Introduction/Java_Loops_II/Solution.java)          |
|                          Warmup         | [Mini-Max Sum](https://www.hackerrank.com/challenges/mini-max-sum/problem)                                               |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Introduction/Java_Datatypes/Solution.java)          |
|                        Warmup         | [Birthday Cake Candles](https://www.hackerrank.com/challenges/birthday-cake-candles/problem)                             |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Introduction/Java_End_of_file/Solution.java)                |
|                 Warmup         | [Time Conversion](https://www.hackerrank.com/challenges/time-conversion/problem)                                         |   15   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Introduction/Java_Static_Initializer_Block/Solution.java)    |
|           Implementation      | [Grading Students](https://www.hackerrank.com/challenges/grading/problem)                                                |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Introduction/Java_Int_to_String/Solution.java)        |
|                  Implementation      | [Apple and Orange](https://www.hackerrank.com/challenges/apple-and-orange/problem)                                       |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Introduction/Java_Date_and_Time/Solution.java)      |
|                   Implementation      | [Kangaroo](https://www.hackerrank.com/challenges/kangaroo/problem)                                                       |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Introduction/Java_Currency_Formatter/Solution.java)             |
| Implementation      | [Between Two Sets](https://www.hackerrank.com/challenges/between-two-sets/problem)                                       |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Strings/Java_Strings_Introduction/Solution.java)                |
| Implementation      | [Breaking the Records](https://www.hackerrank.com/challenges/breaking-best-and-worst-records/problem)                    |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Strings/Java_Substring/Solution.java)                      |
|      Implementation      | [Birthday Chocolate](https://www.hackerrank.com/challenges/the-birthday-bar/problem)                                     |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Strings/Java_Substring_Comparisons/Solution.java)             |
|          Implementation      | [Divisible Sum Pairs](https://www.hackerrank.com/challenges/divisible-sum-pairs/problem)                                 |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Strings/Java_String_Reverse/Solution.java)                   |
|           Implementation      | [Migratory Birds](https://www.hackerrank.com/challenges/migratory-birds/problem)                                         |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Strings/Java_Anagrams/Solution.java)                        |
|     Strings             | [Super Reduced Strings](https://www.hackerrank.com/challenges/reduced-string/problem)                                    |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Strings/Java_String_Tokens/Solution.java)                   |
|           Strings             | [CamelCase](https://www.hackerrank.com/challenges/camelcase/problem)                                                     |   15   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Strings/Pattern_Syntax_Checker/Solution.java)             |
|         Strings             | [Strong Password](https://www.hackerrank.com/challenges/strong-password/problem)                                         |   15   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/BigNumber/Java_BigInteger/Solution.java)                   |
|           Strings             | [Two Characters](https://www.hackerrank.com/challenges/two-characters/problem)                                           |   20   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/BigNumber/Java_BigDecimal/Solution.java)                     |
|       Strings             | [Pangrams](https://www.hackerrank.com/challenges/pangrams/problem)                                                       |   20   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Data_Structures/Java_1D_Array/Solution.java)                 |
|       Strings             | [Anagram](https://www.hackerrank.com/challenges/anagram/problem)                                                         |   25   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Data_Structures/Java_2D_Array/Solution.java)           |
|                 Strings             | [Making Anagrams](https://www.hackerrank.com/challenges/making-anagrams/problem)                                         |   30   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Data_Structures/Java_Arraylist/Solution.java)                    |
|       Strings             | [Game of Thrones - I](https://www.hackerrank.com/challenges/game-of-thrones/problem)                                     |   30   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Data_Structures/Java_1D_Array_-Part_2/Solution.java)           |
|         Strings             | [Two Strings](https://www.hackerrank.com/challenges/two-strings/problem)                                                 |   25   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Data_Structures/Java_List/Solution.java)                        |
|        Data Structures       | [Java Map](https://www.hackerrank.com/challenges/phone-book)                                                             |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Data_Structures/Java_Map/Solution.java)                        |
|       Data Structures       | [Java Hashset](https://www.hackerrank.com/challenges/java-hashset)                                                       |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Data_Structures/Java_Hashset/Solution.java)                      |
|  Object Oriented Programming| [Java Inheritance I](https://www.hackerrank.com/challenges/java-inheritance-1/problem)  |   5    | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Object_Oriented_Programming/Java_Inheritance_I/Solution.java)    |
| Object Oriented Programming| [Java Inheritance II](https://www.hackerrank.com/challenges/java-inheritance-2/problem)  |   10    | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Object_Oriented_Programming/Java_Inheritance_II/Solution.java)    |
| Object Oriented Programming| [Java Abstract Class](https://www.hackerrank.com/challenges/java-abstract-class/problem)  |   10    | [Main.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Object_Oriented_Programming/Java_Abstract_Class/Main.java)         |
|  Object Oriented Programming| [Java Interface](https://www.hackerrank.com/challenges/java-interface/problem)  |             10    | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Object_Oriented_Programming/Java_Interface/Solution.java)       |
|   Object Oriented Programming| [Java Method Overriding](https://www.hackerrank.com/challenges/java-method-overriding/problem)  |             10    | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Object_Oriented_Programming/Java_Method_Overriding/Solution.java)     |
|    Object Oriented Programming| [Java Method Overriding 2 (Super Keyword)](https://www.hackerrank.com/challenges/java-method-overriding-2-super-keyword/problem)| 10| [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Object_Oriented_Programming/Java_Method_Overriding_2/Solution.java)   |
|    Object Oriented Programming| [Java Instanceof keyword](https://www.hackerrank.com/challenges/java-instanceof-keyword/problem)  |       10    | [InstanceOFTutorial.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Object_Oriented_Programming/Java_Instanceof_keyword/InstanceOFTutorial.java)                                                                               |
| Exception Handling | [Java Exception Handling (Try-catch)](https://www.hackerrank.com/challenges/java-exception-handling-try-catch/problem)            |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Exception_Handling/Java_Exception_Handling_Try-catch/Solution.java) |
|     Exception Handling | [Java Exception Handling](https://www.hackerrank.com/challenges/java-exception-handling/problem)                               |   10   | [Solution.java](https://github.com/peti8/HackerRank_solutions-Java_-_Language_Proficiency/tree/master/Java_-_Language_Proficiency/Exception_Handling/Java_Exception_Handling/Solution.java)    
